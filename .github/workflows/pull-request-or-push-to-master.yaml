name: Pull Request or Push to master

on:
  pull_request: {}
  push:
    branches: [master]
  workflow_dispatch: {}

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions: {}

jobs:
  trunk_check:
    name: Trunk Check
    runs-on: ubuntu-latest
    permissions:
      checks: write # For Trunk to post annotations
      contents: read
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Trunk Check
        uses: trunk-io/trunk-action@97ecd21fe6c743bf7a606791584b683a7995c70e # v1.1.9

  detect_changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      go: ${{ steps.filter.outputs.go }}
      python: ${{ steps.filter.outputs.python }}
      rust: ${{ steps.filter.outputs.rust }}
      typescript: ${{ steps.filter.outputs.typescript }}
    timeout-minutes: 2
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # v2.11.1
        id: filter
        with:
          filters: |
            go:
              - 'go/**'
            python:
              - 'python/**'
            rust:
              - 'rust/**'
            typescript:
              - 'typescript/**'

  go_build_check:
    name: Go Build Check
    needs: detect_changes
    if: ${{ needs.detect_changes.outputs.go == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        working-directory: go
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Setup Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version: 1.21.1
          cache-dependency-path: go/go.sum
      - name: Run build check
        run: go build -o bin/ src/main.go
      - name: Run execution check
        run: go run src/main.go

  python_build_check:
    name: Python Build Check
    needs: detect_changes
    if: ${{ needs.detect_changes.outputs.python == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        working-directory: python
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Setup Python
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
        with:
          python-version: 3.11.5
          cache: poetry
          cache-dependency-path: python/poetry.lock
      - name: Setup Poetry
        uses: abatilo/actions-poetry@192395c0d10c082a7c62294ab5d9a9de40e48974 # v2.3.0
        with:
          poetry-version: 1.6.1
      - name: Install package dependencies
        run: poetry install
      - name: Run build check
        run: poetry build
      - name: Run execution check
        run: poetry run python src/main.py

  rust_build_check:
    name: Rust Build Check
    needs: detect_changes
    if: ${{ needs.detect_changes.outputs.rust == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        working-directory: rust
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@1482605bfc5719782e1267fd0c0cc350fe7646b8
        with:
          toolchain: 1.72.1
          # TODO: check whether caching option was added
      - name: Run build check
        run: cargo build --locked --verbose
      - name: Run execution check
        run: cargo run

  typescript_build_check:
    name: TypeScript Build Check
    needs: detect_changes
    if: ${{ needs.detect_changes.outputs.typescript == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    defaults:
      run:
        working-directory: typescript
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Setup NodeJS
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1
        with:
          node-version: 20.7.0
          cache: npm
          cache-dependency-path: typescript/package-lock.json
      - name: Install package dependencies
        run: npm ci
      - name: Run build check
        run: npm run dist:build
      - name: Run execution check
        run: npm start
